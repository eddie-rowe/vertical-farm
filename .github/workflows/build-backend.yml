name: Backend Build

on:
  workflow_call:
    inputs:
      push_to_registry:
        required: false
        type: boolean
        default: true
        description: 'Whether to push the built image to registry'
      tag_suffix:
        required: false
        type: string
        default: ''
        description: 'Suffix to add to the image tag'
    outputs:
      image_tag:
        description: "Built Docker image tag"
        value: ${{ jobs.build.outputs.image_tag }}
      image_digest:
        description: "Built Docker image digest"
        value: ${{ jobs.build.outputs.image_digest }}

permissions:
  contents: read
  packages: write
  security-events: write
  actions: write

jobs:
  build:
    name: Build Backend Image
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}
      image_digest: ${{ steps.build.outputs.digest }}
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[all]
#      - name: Build Docker image
#        run: docker build -t ghcr.io/${{ github.repository }}/backend:${{ github.sha }} .
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
#      - name: Push Docker image
#        run: docker push ghcr.io/${{ github.repository }}/backend:${{ github.sha }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/backend:${{ github.sha }}
            ghcr.io/${{ github.repository }}/backend:latest
          cache-from: type=gha,scope=backend
          cache-to: type=gha,scope=backend,mode=max
      - name: Generate build summary
        run: |
          echo "## 🐳 Backend Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Property | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Image | \`${{ steps.meta.outputs.tags }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Digest | \`${{ steps.build.outputs.digest }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Platforms | linux/amd64, linux/arm64 |" >> $GITHUB_STEP_SUMMARY
          echo "| Registry | ${{ env.REGISTRY }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Pushed | ${{ inputs.push_to_registry != false && '✅ Yes' || '❌ No' }} |" >> $GITHUB_STEP_SUMMARY
          
          # Add vulnerability summary
          if [ -f trivy-results.sarif ]; then
            CRITICAL_COUNT=$(jq '[.runs[].results[] | select(.level == "error")] | length' trivy-results.sarif)
            HIGH_COUNT=$(jq '[.runs[].results[] | select(.level == "warning")] | length' trivy-results.sarif)
            echo "| Security | Critical: $CRITICAL_COUNT, High: $HIGH_COUNT |" >> $GITHUB_STEP_SUMMARY
          fi