name: Frontend Build

on:
  workflow_call:
    inputs:
      push_to_registry:
        required: false
        type: boolean
        default: true
        description: 'Whether to push the built image to registry'
      tag_suffix:
        required: false
        type: string
        default: ''
        description: 'Suffix to add to the image tag'
    outputs:
      image_tag:
        description: "Built Docker image tag"
        value: ${{ jobs.build.outputs.image_tag }}
      image_digest:
        description: "Built Docker image digest"
        value: ${{ jobs.build.outputs.image_digest }}

permissions:
  contents: read
  packages: write
  security-events: write
  actions: write

jobs:
  build:
    name: Build Frontend Image
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}
      image_digest: ${{ steps.build.outputs.digest }}
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json
          
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: ./frontend/node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to GitHub Container Registry
        if: ${{ inputs.push_to_registry }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/frontend
          tags: |
            type=ref,event=branch,suffix=${{ inputs.tag_suffix }}
            type=ref,event=pr,suffix=${{ inputs.tag_suffix }}
            type=sha,prefix={{branch}}-,suffix=${{ inputs.tag_suffix }}
            type=raw,value=latest,enable={{is_default_branch}},suffix=${{ inputs.tag_suffix }}
  
      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v6
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        with:
          context: ./frontend
          push: ${{ inputs.push_to_registry }}
          build-args: |
            NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
            NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
          tags: |
            ghcr.io/${{ github.repository }}/frontend:${{ github.sha }}
            ghcr.io/${{ github.repository }}/frontend:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}/frontend:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}/frontend:buildcache,mode=max
          platforms: linux/amd64
          
      - name: Generate build summary
        env:
          IMAGE_TAGS: ${{ steps.meta.outputs.tags }}
          IMAGE_DIGEST: ${{ steps.build.outputs.digest }}
          PUSH_STATUS: ${{ inputs.push_to_registry && '✅ Yes' || '❌ No' }}
        run: |
          echo "## 🌐 Frontend Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Property | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Image | \`$IMAGE_TAGS\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Digest | \`$IMAGE_DIGEST\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Platforms | linux/amd64 |" >> $GITHUB_STEP_SUMMARY
          echo "| Registry | ghcr.io |" >> $GITHUB_STEP_SUMMARY
          echo "| Pushed | $PUSH_STATUS |" >> $GITHUB_STEP_SUMMARY
          
          # Add vulnerability summary if available
          if [ -f trivy-results.sarif ]; then
            CRITICAL_COUNT=$(jq '[.runs[].results[] | select(.level == "error")] | length' trivy-results.sarif)
            HIGH_COUNT=$(jq '[.runs[].results[] | select(.level == "warning")] | length' trivy-results.sarif)
            echo "| Security | Critical: $CRITICAL_COUNT, High: $HIGH_COUNT |" >> $GITHUB_STEP_SUMMARY
          fi