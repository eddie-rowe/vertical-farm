name: Test Suite
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: '3.13'
  NODE_VERSION: '20'

jobs:
  # Removed individual test jobs - using unified test suite instead

  unified-test-suite:
    name: Unified Test Suite (test-all.sh)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install Node.js dependencies
        run: npm install
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
      
      - name: Make test script executable
        run: chmod +x test-all.sh
      
      - name: Run unified test suite
        env:
          # Backend environment variables
          TESTING: true
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_JWT_SECRET }}
          
          # Frontend environment variables
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          
          # Integration test variables
          API_BASE_URL: http://localhost:8000
        run: ./test-all.sh
      
      - name: Upload unified test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unified-test-results
          path: |
            backend/htmlcov/
            frontend/coverage/
            tests/results/
            tests/*.log

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unified-test-suite]
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      
      - name: Display test summary
        run: |
          echo "## Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.unified-test-suite.result }}" == "success" ]; then
            echo "| Unified Test Suite (Backend + Frontend + Integration) | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
            echo "| - Backend Tests (40 tests) | ✅ Included |" >> $GITHUB_STEP_SUMMARY
            echo "| - Frontend Tests (22 tests) | ✅ Included |" >> $GITHUB_STEP_SUMMARY
            echo "| - Integration Tests | ✅ Included |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Unified Test Suite | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
            echo "| Check individual test outputs in the unified job logs |" >> $GITHUB_STEP_SUMMARY
          fi 